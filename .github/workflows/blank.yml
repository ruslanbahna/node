name: node-performance-test

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  node-performance-test:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest

    steps:
      - name: Install NVM, Node.js, and NPM
        run: |
          apt-get update && apt-get install -y curl
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
          nvm install 20.10.0
          echo "NVM_DIR=$NVM_DIR" >> $GITHUB_ENV
          echo "PATH=$PATH:$NVM_DIR/versions/node/$(nvm version)/bin" >> $GITHUB_ENV
        shell: bash

      - name: Install Benchmark.js
        run: npm install benchmark

      - name: Run Node Performance Test
        run: |
          node -e "
            const Benchmark = require('benchmark');
            const suite = new Benchmark.Suite();
            const totalStartTime = Date.now();

            suite
              .add('Fibonacci Recursive', function() {
                const fib = (n) => n < 2 ? n : fib(n - 1) + fib(n - 2);
                fib(30);
              })
              .add('Array Sorting', function() {
                const arr = Array.from({ length: 10 }, () => Math.random());
                arr.sort((a, b) => a - b);
              })
              .add('String Manipulation', function() {
                let str = '';
                for (let i = 0; i < 10; i++) str += 'a';
              })
              .add('Map Operations', function() {
                const map = new Map();
                for (let i = 0; i < 10; i++) map.set(i, i * i);
              })
              .add('Set Operations', function() {
                const set = new Set();
                for (let i = 0; i < 10; i++) set.add(i);
              })
              .add('JSON Parsing', function() {
                const json = JSON.stringify(Array.from({ length: 10 }, (_, i) => ({ num: i })));
                JSON.parse(json);
              })
              .add('RegExp Matching', function() {
                const str = 'hello world';
                /o/.test(str); // Escaped slashes
              })
              .add('Math Operations', function() {
                for (let i = 0; i < 10; i++) Math.sqrt(i);
              })
              .on('cycle', event => console.log(String(event.target)))
              .on('complete', function() {
                console.log('All tasks completed. Fastest is ' + this.filter('fastest').map('name'));
                const totalEndTime = Date.now();
                console.log('Total execution time: ' + (totalEndTime - totalStartTime) + ' ms');
              })
              .run({ async: true });

            console.log('Benchmark test started...');
          "



      

