name: python-performance-test

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  node-performance-test:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest

    steps:
      - name: Install Node.js and NPM
        run: |
          apt-get update
          apt-get install -y nodejs npm

      - name: Install Benchmark.js
        run: npm install benchmark

      - name: Run Node Performance Test
        run: |
          node --version
          npm --verison
          node -e "
            const Benchmark = require('benchmark');
            const suite = new Benchmark.Suite();
            
            ['asyncTest1', 'syncTest2', 'asyncTest3', 'syncTest4', 'asyncTest5', 'syncTest6', 'asyncTest7', 'syncTest8', 'asyncTest9', 'syncTest10', 'asyncTest11', 'syncTest12', 'asyncTest13', 'syncTest14', 'asyncTest15', 'syncTest16', 'asyncTest17', 'syncTest18', 'asyncTest19', 'syncTest20', 'optimizedAsyncTest'].forEach(testName => {
              suite.add(testName, {
                defer: true,
                fn: deferred => {
                  let completed = 0;
                  const startTime = process.hrtime();
                  
                  if (testName === 'optimizedAsyncTest') {
                    const array = new Float64Array(1000000);
                    for (let i = 0; i < 1000000; i++) {
                      array[i] = Math.sqrt(i);
                    }
                  } else {
                    for (let i = 0; i < 2000000; i++) {
                      if (testName.startsWith('async')) Math.sqrt(i);
                      else if (testName.startsWith('sync')) Math.pow(i, 2);
                    }
                  }
                  
                  const endTime = process.hrtime(startTime);
                  deferred.resolve(endTime[0] * 1e9 + endTime[1]);
                }
              });
            });
            
            suite.on('cycle', function(event) {
              console.log(String(event.target));
            });
            
            suite.on('complete', function() {
              const fastest = this.filter('fastest').map('name');
              console.log('Fastest is ' + fastest);
            });
            "



      

